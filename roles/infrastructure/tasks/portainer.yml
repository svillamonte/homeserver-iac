- name: Create Portainer data volume
  community.docker.docker_volume:
    name: portainer_data

- name: Run Portainer container
  community.docker.docker_container:
    name: portainer
    image: portainer/portainer-ce:latest
    detach: true
    restart_policy: always
    ports:
      - "8000:8000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

- name: Configure admin user password
  uri:
    url: "https://{{ ansible_host }}:9443/api/users/admin/init"
    method: POST
    return_content: true
    validate_certs: false
    body_format: json
    body: '{ "username":"{{ portainer_user }}", "password":"{{ portainer_password }}"}'
    status_code: 200, 409

- name: Get auth token
  uri:
    url: "https://{{ ansible_host }}:9443/api/auth"
    method: POST
    return_content: true
    validate_certs: false
    body_format: json
    body: '{ "username":"{{ portainer_user }}", "password":"{{ portainer_password }}"}'
  register: portainer_auth

- name: Add local environment
  uri:
    url: "https://{{ ansible_host }}:9443/api/endpoints"
    method: POST
    return_content: true
    validate_certs: false
    headers:
      Authorization: Bearer {{ (portainer_auth.content|from_json).jwt }}
    body_format: form-multipart
    body:
      Name: "{{ inventory_hostname }}"
      EndpointCreationType: "1"
    status_code: 200, 409

# Add other non local environments

- name: Get environments
  uri:
    url: "https://{{ ansible_host }}:9443/api/endpoints"
    method: GET
    return_content: true
    validate_certs: false
    headers:
      Authorization: Bearer {{ (portainer_auth.content|from_json).jwt }}
  register: portainer_environments

- name: Get local endpoint
  set_fact:
    local_endpoint_id: "{{ portainer_environments.content | from_json | json_query(query) | first }}"
  vars:
    query: "[?Name=='{{ inventory_hostname }}'].Id"